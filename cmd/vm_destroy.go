package cmd

import (
	"fmt"
	"html/template"
	"strings"

	"github.com/spf13/cobra"
)

var (
	vmDestroyCmd = &cobra.Command{
		Use:   "destroy",
		Short: "Destroy the VM",
		Long:  `Destroy the VM and it's parent snapshot (uses zfs destroy)`,
		Run: func(cmd *cobra.Command, args []string) {
			generateNewDnsConfig()
		},
	}
)

// func vmDestroy(vmName string, parentSnapshot string) {

// }

type dnsInfoStruct struct {
	vmName    string
	ipAddress string
}

func generateNewDnsConfig() {
	fmt.Println("DNS Config was generated")
	config := []dnsInfoStruct{}

	for _, v := range getAllVms() {
		tempConfig := vmConfig(v)
		tempDnsInfo := dnsInfoStruct{}
		tempDnsInfo.ipAddress = tempConfig.Networks[0].IPAddress
		tempDnsInfo.vmName = v
		config = append(config, tempDnsInfo)
	}

	tmpl, err := template.New("config").Parse(configTemplate)
	if err != nil {
		panic(err)
	}

	var output strings.Builder
	if err := tmpl.Execute(&output, config); err != nil {
		panic(err)
	}

	fmt.Println(output.String())
}

// func reloadDnsService() {
// 	fmt.Println("DNS Service reloaded")
// }

const configTemplate = `
# This file is automatically generated by HosterCore.
# Modifications will be overwritten!
server:
        username: unbound
        directory: /var/unbound
        chroot: /var/unbound
        
        pidfile: /var/run/local_unbound.pid
        auto-trust-anchor-file: /var/unbound/root.key
        
        interface: 0.0.0.0
        
        access-control: 127.0.0.0/8 allow
		access-control: 10.0.0.0/8 allow
		access-control: 172.16.0.0/12 allow
		access-control: 192.168.0.0/16 allow
        
        {{range .config}}
        local-zone: "{{.vmName}}" redirect
        local-data: "{{.vmName}}}} A {{.ipAddress}}"
        {{end}}
include: /var/unbound/forward.conf
include: /var/unbound/lan-zones.conf
include: /var/unbound/control.conf
include: /var/unbound/conf.d/*.conf
`
